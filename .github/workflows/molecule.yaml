---
name: Molecule Test
on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
  push:
    branches:
      - main
  schedule:
    # Runs every Sunday at 4 AM (see https://crontab.guru)
    - cron: "0 4 * * 0"
  workflow_dispatch:

# Cancel any in-progress job when a new workflow is triggered
concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.ref }}

env:
  COLLECTION_PATH: $HOME/.ansible/collections/ansible_collections/l50/arsenal
  ANSIBLE_FORCE_COLOR: "1"
  PYTHON_VERSION: "3.12.6"

jobs:
  role_test:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        include:
          - name: "Role Test - sliver"
            path: "roles/sliver"
          - name: "Role Test - ttpforge"
            path: "roles/ttpforge"
          - name: "Role Test - Attack Box"
            path: "roles/attack_box"

    steps:
      - name: Delete huge unnecessary tools folder
        run: |
          echo "Initial disk space:"
          df -h
          rm -rf /opt/hostedtoolcache
          echo "Disk space after cleanup:"
          df -h

      - name: Checkout git repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Set up Python
        uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c # v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'
          cache-dependency-path: '.hooks/requirements.txt'

      - name: Cache Ansible collections
        uses: actions/cache@6849a6489940f00c2f30c0fb92c6274307ccb58a # v4.1.2
        with:
          path: ~/.ansible/collections
          key: ${{ runner.os }}-ansible-${{ hashFiles('**/requirements.yml') }}

      - name: Install dependencies
        run: python3 -m pip install -r .hooks/requirements.txt

      - name: Run molecule test for ${{ matrix.name }}
        run: |
          set -ex
          molecule --version
          molecule list

          if ! MOLECULE_DEBUG=1 molecule test; then
            echo "Molecule test failed. Collecting debug information..."

            echo "Docker containers:"
            docker ps -a

            echo "=== Docker Container Logs ==="
            docker ps -q | while read -r container; do
              echo "=== Logs from container ${container} ==="
              docker logs "${container}" 2>&1
              echo "=== End logs for container ${container} ==="
            done

            echo "=== Molecule Logs ==="
            find . -name '*.log' -print0 | while IFS= read -r -d '' log; do
              echo "Contents of ${log}:"
              cat "${log}"
              echo "=== End of ${log} ==="
            done

            echo "=== Directory structure ==="
            ls -R molecule/

            if [ -f "molecule/default/molecule.yml" ]; then
              echo "=== molecule.yml content ==="
              cat "molecule/default/molecule.yml"
            fi

            exit 1
          fi
        working-directory: ${{ matrix.path }}

  playbook_test:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        include:
          - name: "Playbook Test - sliver"
            path: "playbooks/sliver"
          - name: "Playbook Test - ttpforge"
            path: "playbooks/ttpforge"
          - name: "Playbook Test - Atomic Red Team"
            path: "playbooks/atomic-red-team"
          - name: "Playbook Test - Attack Box"
            path: "playbooks/attack_box"
    steps:
      - name: Delete huge unnecessary tools folder
        run: |
          echo "Initial disk space:"
          df -h
          rm -rf /opt/hostedtoolcache
          echo "Disk space after cleanup:"
          df -h

      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Set up Python
        uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c # v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'
          cache-dependency-path: '.hooks/requirements.txt'

      - name: Cache Ansible collections
        uses: actions/cache@6849a6489940f00c2f30c0fb92c6274307ccb58a # v4.1.2
        with:
          path: ~/.ansible/collections
          key: ${{ runner.os }}-ansible-${{ hashFiles('**/requirements.yml') }}

      - name: Install dependencies
        run: python3 -m pip install -r .hooks/requirements.txt

      - name: Install galaxy dependencies
        run: |
          ansible-galaxy install -v -r requirements.yml
          ansible-galaxy collection install -v -r requirements.yml
          mkdir -p ~/.ansible/collections/ansible_collections/l50
          ln -s "$PWD" ~/.ansible/collections/ansible_collections/l50/arsenal

      - name: Run molecule test for ${{ matrix.name }}
        run: |
          set -ex
          molecule --version
          molecule list

          # Ensure converge.yml exists and show its content
          echo "=== Converge playbook content ==="
          cat molecule/default/converge.yml

          # Run with enhanced debugging
          if ! ANSIBLE_VERBOSITY=2 MOLECULE_DEBUG=1 molecule test --debug; then
            echo "Molecule test failed. Collecting debug information..."

            echo "=== Failed Playbook Debug ==="
            cat molecule/default/converge.yml

            echo "Docker containers:"
            docker ps -a

            echo "=== Docker Container Logs ==="
            docker ps -q | while read -r container; do
              echo "=== Logs from container ${container} ==="
              docker logs "${container}" 2>&1 || true
              echo "=== Ansible facts from container ${container} ==="
              docker exec "${container}" ansible localhost -m setup || true
              echo "=== End logs for container ${container} ==="
            done

            echo "=== Molecule Logs ==="
            find . -type f -name '*.log' -print0 | while IFS= read -r -d '' log; do
              echo "Contents of ${log}:"
              cat "${log}"
              echo "=== End of ${log} ==="
            done

            echo "=== Directory structure ==="
            ls -R molecule/

            echo "=== molecule.yml content ==="
            cat molecule/default/molecule.yml

            # Show Ansible inventory
            echo "=== Inventory content ==="
            cat molecule/default/inventory/hosts || true

            exit 1
          fi
        working-directory: ${{ matrix.path }}
        env:
          ANSIBLE_FORCE_COLOR: "1"
          ANSIBLE_VERBOSITY: "2"

      # Add a post-failure debug step
      - name: Debug on failure
        if: failure()
        run: |
          echo "=== Environment Variables ==="
          env | sort

          echo "=== Directory Structure ==="
          ls -R

          echo "=== Docker Status ==="
          docker ps -a
        working-directory: ${{ matrix.path }}
