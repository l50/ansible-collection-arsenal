---
- name: Ensure user home directory exists
  ansible.builtin.include_tasks: "../../asdf/tasks/ensure_directory_exists.yml"
  args:
    apply:
      become: "{{ ansible_facts['os_family'] != 'Darwin' }}"
  vars:
    directories:
      - path: "{{ zsh_setup_user_home }}"
        owner: "{{ zsh_setup_username }}"
        group: "{{ zsh_setup_usergroup }}"
        mode: '0755'
  when: zsh_setup_username in ansible_facts.getent_passwd

- name: Check if oh-my-zsh exists
  ansible.builtin.stat:
    path: "{{ zsh_setup_user_home }}/.oh-my-zsh"
  register: oh_my_zsh_installed

- name: Download oh-my-zsh install script
  ansible.builtin.get_url:
    url: "{{ zsh_setup_omz_install_script_url }}"
    dest: "{{ zsh_setup_user_home }}/omz-installer.sh"
    mode: '0755'
  become: true
  become_user: "{{ zsh_setup_username }}"
  when: not oh_my_zsh_installed.stat.exists

- name: Check for bash
  ansible.builtin.command: which bash
  register: bash_check
  changed_when: false
  ignore_errors: true

- name: Set shell executable
  ansible.builtin.set_fact:
    shell_executable: >-
      {% if bash_check.rc == 0 and bash_check.stdout is defined %}{{- bash_check.stdout | trim -}}{% else %}/bin/sh{% endif %}

- name: Install oh-my-zsh
  ansible.builtin.shell: |
    {% if shell_executable != '/bin/sh' %}
    set -o pipefail
    {% endif %}
    export HOME="{{ zsh_setup_user_home }}"
    export ZSH="{{ zsh_setup_user_home }}/.oh-my-zsh"
    echo 'y' | {{ zsh_setup_user_home }}/omz-installer.sh --unattended --keep-zshrc
  args:
    creates: "{{ zsh_setup_user_home }}/.oh-my-zsh"
    executable: "{{ shell_executable }}"
  environment:
    HOME: "{{ zsh_setup_user_home }}"
    ZSH: "{{ zsh_setup_user_home }}/.oh-my-zsh"
  become: true
  become_user: "{{ zsh_setup_username }}"
  when: not oh_my_zsh_installed.stat.exists

- name: Remove omz-installer.sh
  ansible.builtin.file:
    path: "{{ zsh_setup_user_home }}/omz-installer.sh"
    state: absent
  become: true
  become_user: "{{ zsh_setup_username }}"
  when: oh_my_zsh_installed.stat.exists
  changed_when: false

- name: Check if .zshrc exists
  ansible.builtin.stat:
    path: "{{ zsh_setup_user_home }}/.zshrc"
  register: zshrc_exists

- name: Ensure .zshrc exists
  ansible.builtin.template:
    src: zshrc.j2
    dest: "{{ zsh_setup_user_home }}/.zshrc"
    mode: "0644"
  become: true
  become_user: "{{ zsh_setup_username }}"
  when: not zshrc_exists.stat.exists
