---
# - name: Create ttpforge role user (if not already present)
#   ansible.builtin.include_role:
#     name: cowdogmoo.workstation.user_setup
#   vars:
#     user_setup_default_users: "{{ ttpforge_users }}"

- name: Install required packages for ttpforge
  ansible.builtin.include_role:
    name: cowdogmoo.workstation.package_management
  vars:
    package_management_common_install_packages: "{{ ttpforge_common_install_packages }}"
    package_management_debian_specific_packages: "{{ ttpforge_debian_packages }}"
    package_management_redhat_specific_packages: "{{ ttpforge_el_packages }}"

# - name: Install asdf and go
#   ansible.builtin.include_role:
#     name: cowdogmoo.workstation.asdf
#   vars:
#     asdf_global_install: "{{ ttpforge_global_install | default(false) }}"

- name: Configure Git to allow ttpforge repository as a safe directory
  community.general.git_config:
    name: safe.directory
    scope: global
    value: "{{ ttpforge_repo_path }}"
  become: true

- name: Clone ttpforge repo
  ansible.builtin.git:
    repo: 'https://github.com/facebookincubator/ttpforge.git'
    dest: "{{ ttpforge_repo_path }}"
    version: main

- name: Check current ownership of {{ ttpforge_repo_path }}
  ansible.builtin.stat:
    path: "{{ ttpforge_repo_path }}"
  register: ttpforge_stat

- name: Ensure correct ownership of the ttpforge repository
  ansible.builtin.file:
    path: "{{ ttpforge_repo_path }}"
    owner: "{{ ttpforge_users[0].username }}"
    group: "{{ ttpforge_users[0].usergroup }}"
    recurse: true
  changed_when: false

- name: Check if ttpforge server needs to be built
  ansible.builtin.stat:
    path: "{{ ttpforge_install_path }}"
  register: ttpforge_server_stat
  changed_when: false

- name: Compile ttpforge
  ansible.builtin.shell:
    cmd: |
      {{ ttpforge_go_path }} build -buildvcs=false -o {{ ttpforge_install_path }}
    chdir: "{{ ttpforge_repo_path }}"
    executable: /bin/bash
  tags:
    - molecule-idempotence-notest
  changed_when: "'molecule-idempotence-notest' not in ansible_skip_tags"

- name: Check if ttpforge has been initialized
  ansible.builtin.stat:
    path: "{{ ansible_env.HOME }}/.ttpforge"
  register: ttpforge_server_unpacked_stat
  changed_when: false

- name: Initialize ttpforge
  become: true
  become_user: "{{ ttpforge_users[0].username }}"
  ansible.builtin.command:
    cmd: "{{ ttpforge_install_path }} init"
  when: not ttpforge_server_unpacked_stat.stat.exists
  register: unpack_result
  changed_when: "'TTPForge Initialized' in unpack_result.stdout"
