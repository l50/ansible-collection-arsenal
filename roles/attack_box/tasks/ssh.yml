---
- name: Get primary group name of the current user "{{ attack_box_user | default(ansible_user_id) }}"
  ansible.builtin.command:
    cmd: id -gn "{{ attack_box_user | default(ansible_user_id) }}"
  changed_when: false
  register: primary_group_name

- name: Ensure .ssh directory exists for "{{ attack_box_user | default(ansible_user_id) }}"
  ansible.builtin.file:
    path: "{{ (attack_box_user | default(ansible_user_id)) | ternary('/root/.ssh', ansible_user_dir + '/.ssh') }}"
    state: directory
    owner: "{{ attack_box_user | default(ansible_user_id) }}"
    group: "{{ primary_group_name.stdout }}"
    mode: '0700'

- name: Get list of public SSH key files
  ansible.builtin.find:
    paths: "{{ (attack_box_user | default(ansible_user_id)) | ternary('/root/.ssh', ansible_user_dir + '/.ssh') }}"
    patterns: "*.pub"
  register: ssh_key_files

- name: Add optionally provided public SSH key files to authorized_keys "{{ attack_box_user | default(ansible_user_id) }}"
  ansible.builtin.copy:
    src: "{{ item.path }}"
    dest: "{{ (attack_box_user | default(ansible_user_id)) | ternary('/root/.ssh/authorized_keys', ansible_user_dir + '/.ssh/authorized_keys') }}"
    owner: "{{ attack_box_user | default(ansible_user_id) }}"
    group: "{{ primary_group_name.stdout }}"
    mode: '0600'
  loop: "{{ ssh_key_files.files }}"
  when: ssh_key_files.matched > 0
  loop_control:
    label: "{{ item.path }}"
