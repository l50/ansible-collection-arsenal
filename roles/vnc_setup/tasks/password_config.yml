---
- name: Generate random passwords for vnc_setup_users with vnc_pw.py
  cowdogmoo.workstation.vnc_pw:
    vnc_setup_users: "{{ vnc_setup_users }}"
  register: updated_data

- name: Update vnc_setup_users with the random generated passwords
  no_log: true
  ansible.builtin.set_fact:
    vnc_setup_users_pw: "{{ vnc_setup_users_pw | default([]) + [item] }}"
  loop: "{{ updated_data.result }}"

- name: Process VNC passwords
  no_log: true
  block:
    - name: Check if VNC password file exists
      ansible.builtin.stat:
        path: "/home/{{ item.username }}/.vnc/passwd"
      register: passwd_file
      loop: "{{ vnc_setup_users_pw }}"

    - name: Generate and set VNC passwords
      become: true
      ansible.builtin.shell: |
        set -o pipefail
        user_home="/home/{{ item.0.username }}"
        mkdir -p ${user_home}/.vnc
        echo -n "{{ item.0.pass }}" | {{ vnc_setup_vncpwd_path }} -f > ${user_home}/.vnc/passwd
        chmod 0600 ${user_home}/.vnc/passwd
      args:
        executable: /bin/bash
        warn: false
      loop: "{{ vnc_setup_users_pw | zip(passwd_file.results) | list }}"
      when: not item.1.stat.exists
      changed_when: not item.1.stat.exists

    - name: Set permissions on VNC password files
      become: true
      ansible.builtin.file:
        path: "/home/{{ item.username }}/.vnc/passwd"
        owner: "{{ item.username }}"
        group: "{{ item.usergroup | default(item.username) }}"
        mode: 0600
      loop: "{{ vnc_setup_users }}"
